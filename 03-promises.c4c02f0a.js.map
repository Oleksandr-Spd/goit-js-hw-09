{"mappings":"qhBAAA,IAAAA,EAAAC,EAAA,SAEA,MAAMC,EAAYC,SAASC,cAAc,yBACnCC,EAAaF,SAASC,cAAc,uBACpCE,EAAYH,SAASC,cAAc,sBACnCG,EAAcJ,SAASC,cAAc,wBAI3C,SAASI,EAAcC,EAAUC,GAC/B,MAAMC,EAAgBC,KAAKC,SAAW,GACtC,OAAO,IAAIC,SAAQ,CAACC,EAASC,KAC3BC,YAAW,KACLN,EACFI,EAAQ,C,SAAEN,EAAUS,MAAOR,IAE3BM,EAAO,C,SAAEP,EAAUS,MAAOR,GAAa,GAExCA,EAAW,G,CAXlBR,EAAUiB,iBAAiB,SAc3B,SAAkBC,GAChBA,EAAEC,iBAEF,IAAIX,EAAaY,OAAOjB,EAAWkB,OAC/BC,EAAYF,OAAOhB,EAAUiB,OAC7BE,EAAcH,OAAOf,EAAYgB,OAErC,IAAK,IAAIG,EAAI,EAAGA,GAAKD,EAAaC,IAChClB,EAAckB,EAAGhB,GACdiB,MAAK,EAAClB,SAAEA,EAAQS,MAAEA,MACjBU,EAAA5B,GAAS6B,OAAOC,QACd,uBAAqBrB,QAAiBS,MAAU,IAGnDa,OAAM,EAACtB,SAAEA,EAAQS,MAAEA,MAClBU,EAAA5B,GAAS6B,OAAOG,QACd,sBAAoBvB,QAAeS,MAAU,IAGnDR,GAAcc,C","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst createBtn = document.querySelector('button[type=\"submit\"]');\nconst delayInput = document.querySelector('input[name=\"delay\"]');\nconst stepInput = document.querySelector('input[name=\"step\"]');\nconst amountInput = document.querySelector('input[name=\"amount\"]');\n\ncreateBtn.addEventListener('click', onSubmit);\n\nfunction createPromise(position, delayValue) {\n  const shouldResolve = Math.random() > 0.3;\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay: delayValue });\n      } else {\n        reject({ position, delay: delayValue });\n      }\n    }, delayValue);\n  });\n}\nfunction onSubmit(e) {\n  e.preventDefault();\n\n  let delayValue = Number(delayInput.value);\n  let stepValue = Number(stepInput.value);\n  let amountValue = Number(amountInput.value);\n\n  for (let i = 1; i <= amountValue; i++) {\n    createPromise(i, delayValue)\n      .then(({ position, delay }) => {\n        Notiflix.Notify.success(\n          `✅ Fulfilled promise ${position} in ${delay}ms`\n        );\n      })\n      .catch(({ position, delay }) => {\n        Notiflix.Notify.failure(\n          `❌ Rejected promise ${position} in ${delay}ms`\n        );\n      });\n    delayValue += stepValue;\n  }\n}\n"],"names":["$7Y9D8","parcelRequire","$47d4ff9957288465$var$createBtn","document","querySelector","$47d4ff9957288465$var$delayInput","$47d4ff9957288465$var$stepInput","$47d4ff9957288465$var$amountInput","$47d4ff9957288465$var$createPromise","position","delayValue","shouldResolve","Math","random","Promise","resolve","reject","setTimeout","delay","addEventListener","e","preventDefault","Number","value","stepValue","amountValue","i","then","$parcel$interopDefault","Notify","success","catch","failure"],"version":3,"file":"03-promises.c4c02f0a.js.map"}