{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,SAEMC,EAAYC,SAASC,cAAc,yBACnCC,EAAaF,SAASC,cAAc,uBACpCE,EAAYH,SAASC,cAAc,sBACnCG,EAAcJ,SAASC,cAAc,wBAI3C,SAASI,EAAcC,EAAUC,GAC/B,IAAMC,EAAgBC,KAAKC,SAAW,GACtC,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3BC,YAAW,WACLN,EACFI,EAAQ,CAAEN,WAAUS,MAAOR,IAE3BM,EAAO,CAAEP,WAAUS,MAAOR,G,GAE3BA,E,IAXPR,EAAUiB,iBAAiB,SAc3B,SAAkBC,GAChBA,EAAEC,iBAMF,IAJA,IAAIX,EAAaY,OAAOjB,EAAWkB,OAC/BC,EAAYF,OAAOhB,EAAUiB,OAC7BE,EAAcH,OAAOf,EAAYgB,OAE5BG,EAAI,EAAGA,GAAKD,EAAaC,IAChClB,EAAckB,EAAGhB,GACdiB,MAAK,SAAAC,G,IAAGnB,EAAQmB,EAARnB,SAAUS,EAAKU,EAALV,MACjBW,EAAA7B,GAAS8B,OAAOC,QACd,uBAAwCC,OAAfvB,EAAS,QAAYuB,OAANd,EAAM,M,IAGjDe,OAAM,SAAAL,G,IAAGnB,EAAQmB,EAARnB,SAAUS,EAAKU,EAALV,MAClBW,EAAA7B,GAAS8B,OAAOI,QACd,sBAAqCF,OAAfvB,EAAS,QAAYuB,OAANd,EAAM,M,IAGjDR,GAAcc,C","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst createBtn = document.querySelector('button[type=\"submit\"]');\nconst delayInput = document.querySelector('input[name=\"delay\"]');\nconst stepInput = document.querySelector('input[name=\"step\"]');\nconst amountInput = document.querySelector('input[name=\"amount\"]');\n\ncreateBtn.addEventListener('click', onSubmit);\n\nfunction createPromise(position, delayValue) {\n  const shouldResolve = Math.random() > 0.3;\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay: delayValue });\n      } else {\n        reject({ position, delay: delayValue });\n      }\n    }, delayValue);\n  });\n}\nfunction onSubmit(e) {\n  e.preventDefault();\n\n  let delayValue = Number(delayInput.value);\n  let stepValue = Number(stepInput.value);\n  let amountValue = Number(amountInput.value);\n\n  for (let i = 1; i <= amountValue; i++) {\n    createPromise(i, delayValue)\n      .then(({ position, delay }) => {\n        Notiflix.Notify.success(\n          `✅ Fulfilled promise ${position} in ${delay}ms`\n        );\n      })\n      .catch(({ position, delay }) => {\n        Notiflix.Notify.failure(\n          `❌ Rejected promise ${position} in ${delay}ms`\n        );\n      });\n    delayValue += stepValue;\n  }\n}\n"],"names":["$6JpON","parcelRequire","$ce04d3a99e08e73b$var$createBtn","document","querySelector","$ce04d3a99e08e73b$var$delayInput","$ce04d3a99e08e73b$var$stepInput","$ce04d3a99e08e73b$var$amountInput","$ce04d3a99e08e73b$var$createPromise","position","delayValue","shouldResolve","Math","random","Promise","resolve","reject","setTimeout","delay","addEventListener","e","preventDefault","Number","value","stepValue","amountValue","i","then","param","$parcel$interopDefault","Notify","success","concat","catch","failure"],"version":3,"file":"03-promises.2cad3158.js.map"}