{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,SAMA,SAASC,EAAcC,EAAUC,GAC/B,IAAMC,EAAgBC,KAAKC,SAAW,GACtC,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3BC,YAAW,WACLN,EACFI,EAAQ,CAAEN,WAAUS,MAAOR,IAE3BM,EAAO,CAAEP,WAAUS,MAAOR,G,GAE3BA,E,IAbMS,SAASC,cAAc,SAE/BC,iBAAiB,UActB,SAAkBC,GAChBA,EAAEC,iBAaF,IAXA,IAAMC,EAAeF,EAAEG,OAAOC,SAExBC,EAAaH,EAAoB,MACjCI,EAAYJ,EAAmB,KAC/BK,EAAcL,EAAqB,OAErCd,EAAaoB,OAAOH,EAAWI,OAE7BC,EAAYF,OAAOF,EAAUG,OAC7BE,EAAcH,OAAOD,EAAYE,OAE9BG,EAAI,EAAGA,GAAKD,EAAaC,IAChC1B,EAAc0B,EAAGxB,GACdyB,MAAK,SAAAC,G,IAAG3B,EAAQ2B,EAAR3B,SAAUS,EAAKkB,EAALlB,MACjBmB,EAAA/B,GAASgC,OAAOC,QACd,uBAAwCC,OAAf/B,EAAS,QAAY+B,OAANtB,EAAM,M,IAGjDuB,OAAM,SAAAL,G,IAAG3B,EAAQ2B,EAAR3B,SAAUS,EAAKkB,EAALlB,MAClBmB,EAAA/B,GAASgC,OAAOI,QACd,sBAAqCF,OAAf/B,EAAS,QAAY+B,OAANtB,EAAM,M,IAGjDR,GAAcsB,C","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst form = document.querySelector('.form');\n\nform.addEventListener('submit', onSubmit);\n\nfunction createPromise(position, delayValue) {\n  const shouldResolve = Math.random() > 0.3;\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay: delayValue });\n      } else {\n        reject({ position, delay: delayValue });\n      }\n    }, delayValue);\n  });\n}\nfunction onSubmit(e) {\n  e.preventDefault();\n\n  const formElements = e.target.elements;\n\n  const delayInput = formElements['delay'];\n  const stepInput = formElements['step'];\n  const amountInput = formElements['amount'];\n\n  let delayValue = Number(delayInput.value);\n\n  const stepValue = Number(stepInput.value);\n  const amountValue = Number(amountInput.value);\n\n  for (let i = 1; i <= amountValue; i++) {\n    createPromise(i, delayValue)\n      .then(({ position, delay }) => {\n        Notiflix.Notify.success(\n          `✅ Fulfilled promise ${position} in ${delay}ms`\n        );\n      })\n      .catch(({ position, delay }) => {\n        Notiflix.Notify.failure(\n          `❌ Rejected promise ${position} in ${delay}ms`\n        );\n      });\n    delayValue += stepValue;\n  }\n}\n"],"names":["$6JpON","parcelRequire","$ce04d3a99e08e73b$var$createPromise","position","delayValue","shouldResolve","Math","random","Promise","resolve","reject","setTimeout","delay","document","querySelector","addEventListener","e","preventDefault","formElements","target","elements","delayInput","stepInput","amountInput","Number","value","stepValue","amountValue","i","then","param","$parcel$interopDefault","Notify","success","concat","catch","failure"],"version":3,"file":"03-promises.03abde54.js.map"}